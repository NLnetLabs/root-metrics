- name: Set up the machine as root
  hosts: c03
  remote_user: "{{ superuser }}"
  tasks:
  - name: Initialize apt
    apt:
      update_cache: true
  - name: Do the apt upgrade
    apt:
      upgrade: full
      force: true
  - name: Install all the needed packages
    apt:
      pkg: [acl, build-essential, curl, git, libcap-dev, libgetdns-dev, libidn11-dev, libldns-dev, libssl-dev, libtool, libtool-bin, libunbound-dev, libuv1-dev,
        man, pkg-config, postgresql, pyflakes3, python-ply, python3-psycopg2, python3-paramiko, python3-pip, rsync, unzip]
  - name: Put .bashrc for root
    copy:
      src: ../bashrc-for-metrics-and-root
      dest: /root/.bashrc
  - name: Replace sshd_config
    copy:
      src: ../etc_sshd_config_shorter
      dest: /etc/ssh/sshd_config
  - name: Restart sshd after changing the config
    systemd:
      state: restarted
      name: sshd.service
      daemon_reload: yes      
  - name: Make user 'metrics'
    user: 
      name: metrics
      home: /home/metrics
      shell: /bin/bash
  - name: Initialize Postgres for metrics
    become_user: postgres
    become: true
    postgresql_user:
      name: metrics
      role_attr_flags: CREATEDB,NOSUPERUSER
- name: Install things as metrics
  hosts: c03  
  remote_user: "{{ superuser }}"
  become: true
  become_user: metrics
  tasks:
  - name: Put .bashrc for metrics
    template:
      src: ../bashrc-for-metrics-and-root
      dest: /home/metrics/.bashrc
  - name: Make .ssh for metrics
    file:
      path: /home/metrics/.ssh
      state: directory
      mode: go-rwx
  - name: Copy metrics public key
    copy:
      src: ../Local/metrics_id_rsa.pub
      dest: /home/metrics/.ssh/id_rsa.pub
      mode: go-rwx
  - name: Copy metrics private key
    copy:
      src: ../Local/metrics_id_rsa
      dest: /home/metrics/.ssh/id_rsa
      mode: go-rwx
  - name: Turn off hashing of names in known_hosts
    copy:
      src: ../home_ssh_config
      dest: /home/metrics/.ssh/config
      mode: go-rwx
  - name: Copy the startup script for testing
    copy:
      src: ../Local/c03startup.sh
      dest: /home/metrics/c03startup.sh
      mode: u+x
  - name: Get our empty version of known_hosts; it will be added to as VPs are added
    copy:
      src: ../vp_known_hosts
      dest: /home/metrics/.ssh/known_hosts
      mode: go-rwx
  - name: make Source/
    file:
      path: /home/metrics/Source
      mode: u+wrx,go+rx
      state: directory
  - name: make Target/
    file:
      path: /home/metrics/Target
      mode: u+wrx,go+rx
      state: directory
  - name: make Incoming/
    file:
      path: /home/metrics/Incoming
      state: directory
  - name: make Originals/
    file:
      path: /home/metrics/Originals
      state: directory
  - name: make Logs/
    file:
      path: /home/metrics/Logs
      state: directory
  - name: Get BIND tarball
    get_url:
      url: https://downloads.isc.org/isc/bind9/9.16.20/bind-9.16.20.tar.xz
      dest: /home/metrics/Source/bind-9.16.20.tar.xz
  - name: Expand BIND tarball
    unarchive:
      remote_src: yes
      src: /home/metrics/Source/bind-9.16.20.tar.xz
      dest: /home/metrics/Source
      creates: /home/metrics/Source/bind-9.16.20
  - name: Make BIND
    shell:
      chdir: /home/metrics/Source/bind-9.16.20
      cmd: "./configure --prefix=/home/metrics/Target; make install"
      creates: /home/metrics/Source/bind-9.16.20/config.log
  - name: Put vp_list.txt
    copy:
      src: ../new_vp_list.txt
      dest: /home/metrics/vp_list.txt
  - name: Put the source for getdns_validate
    copy:
      src: ../getdns_validate.c
      dest: /home/metrics/Source/getdns_validate.c
  - name: Make getdns_validate 1
    shell:
      chdir: /home/metrics
      cmd: "gcc -g -O2 -Wall -I. -I/usr/include -std=c99 -c /home/metrics/Source/getdns_validate.c -o /home/metrics/Target/getdns_validate.o"
      creates: /home/metrics/Target/getdns_validate.o
  - name: Make getdns_validate 2
    shell:
      chdir: /home/metrics
      cmd: "libtool --tag=CC --mode=link gcc -g -O2 -Wall -I. -I/usr/include -std=c99 -L/usr/lib -lgetdns -lgetdns_ext_event -lunbound -lidn -lldns -o /home/metrics/Target/getdns_validate /home/metrics/Target/getdns_validate.o"
      creates: /home/metrics/Target/getdns_validate
  - name: Put root-ds.txt
    copy:
      src: ../root-ds.txt
      dest: /home/metrics/Target/root-ds.txt
  - name: Pull or freshen the Github repo
    git:
      repo: 'https://github.com/icann/root-metrics.git'
      dest: /home/metrics/repo
      version: no-transfer-user
  - name: Give the crontab entry for get_root_zone.py
    cron:   # [mba] [wca]
      disabled: no
      name: Get the new root zone
      minute: "0,15,30,45"
      job: "/home/metrics/repo/get_root_zone.py >>/home/metrics/Logs/cron-alert.txt 2>&1"
  - name: Give the crontab entry for collector_processing.py
    cron:
      disabled: yes
      name: Do all the processing
      minute: "4"
      job: "/home/metrics/repo/new_collector_processing.py >>/home/metrics/Logs/cron-alert.txt 2>&1"
  - name: get dnspython
    shell:
      cmd: "pip3 install --user dnspython"
      creates: /home/metrics/.local/lib/python3.7/site-packages/dns
- name: Do Postgres stuff
  hosts: c03
  remote_user: "{{ superuser }}"
  become: true
  become_user: metrics
  tasks:
  - name: Create first database
    postgresql_db:
      login_user: metrics
      name: metrics
  - name: Create table for files gotten
    postgresql_table:
      login_user: metrics
      db: metrics
      name: files_gotten
      columns:
      - filename_short text
      - retrieved_at timestamp
      - processed_at timestamp
      - version int
      - delay int
      - elapsed int
  - name: Create table for route information
    postgresql_table:
      login_user: metrics
      db: metrics
      name: route_info
      columns:
      - filename_short text
      - date_derived timestamp
      - route_string text
  - name: Create table for SOA and correctness records
    postgresql_table:
      login_user: metrics
      db: metrics
      name: record_info
      columns:
      - filename_record text
      - date_derived timestamp
      - target text
      - internet text
      - transport text
      - ip_addr text
      - record_type text
      - query_elapsed real
      - timeout text
      - soa_found text
      - recent_soas text[]
      - is_correct text
      - failure_reason text
      - source_pickle bytea
  - name: Create index in metrics table
    postgresql_idx:
      login_user: metrics
      db: metrics
      table: record_info
      columns: filename_record
      name: filename_record_idx
      idxtype: btree

